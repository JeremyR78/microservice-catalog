

variables:
  DOCKER_TLS_CERTDIR: ""
  INSECURE_REGISTRY: "--insecure-registry=$CI_REGISTRY"

stages:
  - build-unit-tests
  - build-integration-tests
  - package
  - deploy

test-junit:
  image: maven:3.6-openjdk-11-slim
  stage: build-unit-tests
  script:
    - "mvn clean org.jacoco:jacoco-maven-plugin:prepare-agent install -Dtest=PromotionTest,ProductTest,PropertyTest,MapperProductServiceTests jacoco:report"
    - cat target/site/jacoco/index.html
  artifacts:
    paths:
      - target/*.jar
      - target/surefire-reports/TEST-*.xml
      - target/site/jacoco/jacoco.xml
      - target/site/jacoco/index.html
    reports:
      junit:
        - target/surefire-reports/TEST-*.xml
  tags:
    - kubernetes

test-integration:
  image: maven:3.6-openjdk-11-slim
  stage: build-integration-tests
  services:
    - name: docker:18.09.7-dind
  only:
    - master
    - tags
  script: "mvn clean install -Dtest=CatalogDockerTest"
  artifacts:
    paths:
      - target/*.jar
  tags:
    - kubernetes

docker-build:
  tags:
    - kubernetes
  image: docker:18.09.7
  stage: package
  services:
    - name: docker:18.09.7-dind
      command: [ "--insecure-registry=registry.gitlab.local.com:5050" ]
  before_script:
    - echo $INSECURE_REGISTRY
    - echo "$INSECURE_REGISTRY"
    - docker info
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --build-arg JAR_FILE=target/*.jar -t $CI_REGISTRY/$DOCKER_PROJECT_PATH:$DOCKER_TAG .
    - docker push $CI_REGISTRY/$DOCKER_PROJECT_PATH:$DOCKER_TAG


deploy-recette:
  tags:
    - kubernetes
  image: bitnami/kubectl:latest
  stage: deploy
  when: manual
  script:
    - kubectl apply -f deployment.yml -n ecommerce-recette

deploy-prod:
  tags:
    - kubernetes
  image: bitnami/kubectl:latest
  stage: deploy
  when: manual
  script:
    - kubectl apply -f deployment.yml -n ecommerce

